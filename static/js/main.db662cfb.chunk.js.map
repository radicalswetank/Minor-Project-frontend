{"version":3,"sources":["components/App.js","components/Header.js","router/AppRouter.js","index.js"],"names":["App","props","useState","file","setFile","previewSrc","setPreviewSrc","title","description","state","setState","errorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","useRef","handleInputChange","event","target","name","value","updateBorder","dragState","current","style","border","handleOnSubmit","a","preventDefault","Fragment","Form","className","onSubmit","Row","Col","Group","controlId","Control","type","placeholder","onChange","age","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","match","onDragEnter","onDragLeave","getRootProps","getInputProps","ref","src","alt","Button","variant","Header","activeClassName","to","exact","AppRouter","component","path","ReactDOM","render","document","getElementById"],"mappings":"oVAoHeA,G,MAhHH,SAACC,GAAW,IAAD,EACGC,mBAAS,MADZ,mBACdC,EADc,KACRC,EADQ,OAEeF,mBAAS,IAFxB,mBAEdG,EAFc,KAEFC,EAFE,OAGKJ,mBAAS,CACjCK,MAAO,GACPC,YAAa,KALM,mBAGdC,EAHc,KAGPC,EAHO,OAOWR,mBAAS,IAPpB,mBAOdS,EAPc,aAQ+BT,oBAAS,IARxC,mBAQdU,EARc,KAQMC,EARN,KASfC,EAAUC,mBAEVC,EAAoB,SAACC,GACzBP,EAAS,eACJD,EADG,eAELQ,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAgBhCC,EAAe,SAACC,GACF,SAAdA,EACFR,EAAQS,QAAQC,MAAMC,OAAS,iBACR,UAAdH,IACTR,EAAQS,QAAQC,MAAMC,OAAS,uBAG7BC,EAAc,uCAAG,WAAOT,GAAP,SAAAU,EAAA,sDACrBV,EAAMW,iBADe,2CAAH,sDAIpB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,cAAcC,SAAUN,GACrCf,GAAY,uBAAGoB,UAAU,YAAYpB,GACtC,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,QACpB,kBAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLnB,KAAK,OACLC,MAAOX,EAAMU,MAAQ,GACrBoB,YAAY,OACZC,SAAUxB,OAKlB,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,OACpB,kBAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLnB,KAAK,MACLC,MAAOX,EAAMgC,KAAO,GACpBF,YAAY,MACZC,SAAUxB,OAKlB,yBAAKe,UAAU,kBACb,kBAAC,IAAD,CAAUW,OAvDH,SAACC,GAAW,IAClBC,EADiB,YACDD,EADC,MAExBvC,EAAQwC,GAER,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBzC,EAAcuC,EAAWG,SAE3BH,EAAWI,cAAcL,GACzB/B,EAAsB+B,EAAazB,KAAK+B,MAAM,sBAC9CpC,EAAQS,QAAQC,MAAMC,OAAS,sBA8CvB0B,YAAa,kBAAM9B,EAAa,SAChC+B,YAAa,kBAAM/B,EAAa,YAE/B,gBAAGgC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,yCAASD,EAAa,CAAEtB,UAAW,cAAnC,CAAmDwB,IAAKzC,IACtD,0BAAWwC,KACX,kFACCnD,GACC,6BACE,kDADF,IACmCA,EAAKgB,UAM/Cd,EACCO,EACE,yBAAKmB,UAAU,iBACb,yBAAKA,UAAU,gBAAgByB,IAAKnD,EAAYoD,IAAI,aAGpD,yBAAK1B,UAAU,mBACb,kEAIJ,yBAAKA,UAAU,mBACb,iFAIR,kBAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAUrB,KAAK,UAA/B,cCzFOsB,EAhBA,WACX,OACI,yBAAK7B,UAAU,UACX,gDACA,6BACI,kBAAC,IAAD,CAAS8B,gBAAgB,SAASC,GAAG,IAAIC,OAAO,GAAhD,WCUDC,EAbG,kBACd,kBAAC,IAAD,KACI,yBAAKjC,UAAU,aACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkC,UAAWjE,EAAKkE,KAAK,IAAIH,OAAO,S,YCL3DI,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.db662cfb.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nconst App = (props) => {\n  const [file, setFile] = useState(null); // state for storing actual image\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\n  const [state, setState] = useState({\n    title: '',\n    description: ''\n  });\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  const handleInputChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n  const onDrop = (files) => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = '2px dashed #e9ebeb';\n\n  };\n  const updateBorder = (dragState) => {\n    if (dragState === 'over') {\n      dropRef.current.style.border = '2px solid #000';\n    } else if (dragState === 'leave') {\n      dropRef.current.style.border = '2px dashed #e9ebeb';\n    }\n  };\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <React.Fragment>\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        <Row>\n          <Col>\n            <Form.Group controlId=\"name\">\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={state.name || ''}\n                placeholder=\"Name\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form.Group controlId=\"age\">\n              <Form.Control\n                type=\"text\"\n                name=\"age\"\n                value={state.age || ''}\n                placeholder=\"Age\"\n                onChange={handleInputChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n        <div className=\"upload-section\">\n          <Dropzone onDrop={onDrop}\n            onDragEnter={() => updateBorder('over')}\n            onDragLeave={() => updateBorder('leave')}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\n                <input {...getInputProps()} />\n                <p>Drag and drop a file OR click here to select a file</p>\n                {file && (\n                  <div>\n                    <strong>Selected file:</strong> {file.name}\n                  </div>\n                )}\n              </div>\n            )}\n          </Dropzone>\n          {previewSrc ? (\n            isPreviewAvailable ? (\n              <div className=\"image-preview\">\n                <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\n              </div>\n            ) : (\n                <div className=\"preview-message\">\n                  <p>No preview available for this file</p>\n                </div>\n              )\n          ) : (\n              <div className=\"preview-message\">\n                <p>Image preview will be shown here after selection</p>\n              </div>\n            )}\n        </div>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default App;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h1>Catract Detector</h1>\n            <nav>\n                <NavLink activeClassName=\"active\" to=\"/\" exact={true}>\n                    Home\n        </NavLink>\n                {/*<NavLink activeClassName=\"active\" to=\"/list\">\n                    Results\n    </NavLink>*/}\n            </nav>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from '../components/App';\nimport Header from '../components/Header';\n\nconst AppRouter = () => (\n    <BrowserRouter>\n        <div className=\"container\">\n            <Header />\n            <div className=\"main-content\">\n                <Switch>\n                    <Route component={App} path=\"/\" exact={true} />\n                </Switch>\n            </div>\n        </div>\n    </BrowserRouter>\n);\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.scss';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}